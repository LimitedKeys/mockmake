
import os
import pathlib
import argparse

C_EXTENSIONS = ['.c', '.s', '.cpp']

def _fix(path):
    if path[:2] == './':
        path = path[2:]
    return path

def find_source(root, folder="TEST"):
    ''' Find all C source files from the provided root directory.

    Args:
        root (Path): path to the directory to search

    Returns:
        List of found source files.
    '''
    found = []

    for path in pathlib.Path(root).glob('**/*'):
        extension = path.suffix
        if extension in C_EXTENSIONS:
            path = _fix(str(path))
            found.append(path)

    return found

def write_mk(path, srcs):
    with open(path, 'w') as output:
        output.write('\n'.join([
            "# Generated by mockmake python script: mockmake/scripts/source_mk.py",
            '',
            "FIND_SRC  := {}".format(' '.join(['{}'.format(i) for i in srcs])),
            '',
            ]))

def main():
    parser = argparse.ArgumentParser("Find source files")

    parser.add_argument("output_file")
    parser.add_argument("source_dirs")

    args = parser.parse_args()

    source_dirs = [i.strip() for i in args.source_dirs.split()]

    all_sources = []
    for some_dir in source_dirs:
        if some_dir:
            all_sources.extend(find_source(some_dir))

    write_mk(args.output_file, all_sources)

if __name__== "__main__":
    main()
